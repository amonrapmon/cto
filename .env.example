# Yandex MCP Server - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# ⚠️  NEVER commit your .env file with real tokens to version control!

# =============================================================================
# AUTHENTICATION
# =============================================================================

# Yandex OAuth Token (REQUIRED)
# Obtain from: https://oauth.yandex.com/
# See README.md section "Obtaining a Yandex OAuth Token" for detailed instructions
YANDEX_OAUTH_TOKEN=your_yandex_oauth_token_here

# OAuth Token Refresh (Optional - for production use)
# YANDEX_CLIENT_ID=your_client_id
# YANDEX_CLIENT_SECRET=your_client_secret
# YANDEX_REFRESH_TOKEN=your_refresh_token

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment (development, staging, production)
NODE_ENV=development
# For Python implementations:
# PYTHON_ENV=development

# Log Level (error, warn, info, debug, trace)
# Use 'debug' for development, 'info' or 'warn' for production
LOG_LEVEL=info

# Server Port (if running HTTP server for debugging)
# Not typically needed for stdio-based MCP servers
# PORT=3000

# =============================================================================
# MCP CONFIGURATION
# =============================================================================

# MCP Server Name (displayed in client)
MCP_SERVER_NAME=Yandex MCP Server

# MCP Server Version
MCP_SERVER_VERSION=1.0.0

# Request Timeout (milliseconds)
REQUEST_TIMEOUT=30000

# Max Concurrent Requests
MAX_CONCURRENT_REQUESTS=5

# =============================================================================
# YANDEX API SETTINGS
# =============================================================================

# Yandex API Base URL (usually doesn't need to be changed)
YANDEX_API_BASE_URL=https://cloud-api.yandex.net

# Yandex Disk API Version
YANDEX_DISK_API_VERSION=v1

# Rate Limiting
# Maximum requests per second to Yandex API
RATE_LIMIT_PER_SECOND=10

# Maximum requests per minute
RATE_LIMIT_PER_MINUTE=100

# Retry Configuration
# Number of retry attempts for failed requests
MAX_RETRIES=3

# Retry backoff multiplier (exponential backoff)
RETRY_BACKOFF_MULTIPLIER=2

# Initial retry delay (milliseconds)
RETRY_INITIAL_DELAY=1000

# Maximum retry delay (milliseconds)
RETRY_MAX_DELAY=10000

# =============================================================================
# CACHING (Optional)
# =============================================================================

# Enable caching for API responses
ENABLE_CACHE=false

# Cache TTL (time to live) in seconds
CACHE_TTL=300

# Cache size limit (number of entries)
CACHE_MAX_SIZE=1000

# =============================================================================
# SECURITY
# =============================================================================

# Enable security headers
ENABLE_SECURITY_HEADERS=true

# CORS settings (if running HTTP server)
# CORS_ORIGIN=*
# CORS_METHODS=GET,POST,PUT,DELETE
# CORS_ALLOWED_HEADERS=Content-Type,Authorization

# =============================================================================
# MONITORING & ANALYTICS (Optional)
# =============================================================================

# Enable performance monitoring
ENABLE_MONITORING=false

# Enable usage analytics
ENABLE_ANALYTICS=false

# Sentry DSN (for error tracking)
# SENTRY_DSN=your_sentry_dsn_here

# =============================================================================
# DEVELOPMENT & DEBUGGING
# =============================================================================

# Enable debug mode (verbose logging, detailed errors)
DEBUG=false

# Enable development mode features
DEV_MODE=true

# Mock API responses (for testing without real API calls)
MOCK_API=false

# Enable request/response logging
LOG_REQUESTS=true

# Enable performance profiling
ENABLE_PROFILING=false

# =============================================================================
# TESTING
# =============================================================================

# Test mode (used by test suite)
TEST_MODE=false

# Test data directory
TEST_DATA_DIR=./tests/fixtures

# Mock Yandex OAuth token for tests (not a real token)
TEST_YANDEX_TOKEN=test_mock_token_for_automated_tests

# =============================================================================
# MCP CLIENT CONFIGURATIONS
# =============================================================================
# 
# For MCP client configuration examples, see:
#   - claude_desktop_config.json  (Claude Desktop integration)
#   - gemini_settings.json        (Gemini integration)
# 
# These files show how to configure MCP clients to use this server with
# proper environment variable handling.
# 
# Quick reference:
#   Claude Desktop Config Location:
#     - macOS: ~/Library/Application Support/Claude/claude_desktop_config.json
#     - Windows: %APPDATA%\Claude\claude_desktop_config.json
#     - Linux: ~/.config/Claude/claude_desktop_config.json
# 
#   Gemini Settings Location:
#     - Consult your Gemini client documentation
# 
# =============================================================================

# =============================================================================
# ADVANCED OPTIONS
# =============================================================================

# Node.js options (for Node implementations)
# NODE_OPTIONS=--max-old-space-size=4096

# Python options (for Python implementations)
# PYTHONPATH=./src
# PYTHONUNBUFFERED=1

# Timezone
# TZ=UTC

# =============================================================================
# NOTES
# =============================================================================
#
# 1. SECURITY:
#    - Copy this file to .env (which is git-ignored)
#    - NEVER commit .env with real credentials
#    - Use different tokens for dev/staging/production
#    - Rotate tokens regularly
#    - Use minimal OAuth scopes needed
#
# 2. REQUIRED VARIABLES:
#    - YANDEX_OAUTH_TOKEN is the only required variable
#    - Other variables have sensible defaults
#
# 3. MCP CLIENT CONFIGURATION:
#    - See claude_desktop_config.json for Claude Desktop setup
#    - See gemini_settings.json for Gemini setup
#    - Both configs show how to pass YANDEX_OAUTH_TOKEN to the server
#
# 4. DOCUMENTATION:
#    - See README.md for comprehensive setup instructions
#    - See CONTRIBUTING.md for development guidelines
#
# 5. LICENSE:
#    - This project is licensed under GNU GPLv3
#    - See LICENSE file for full terms
#
# =============================================================================
